# Set AWS template version
AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  App:
    Type: String
    Description: Your application's name.
  Env:
    Type: String
    Description: The environment name your service, job, or workflow is being deployed to.
  Name:
    Type: String
    Description: The name of the service, job, or workflow being deployed.

Resources:
  DBSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupDescription: !Ref "AWS::StackName"
      SubnetIds: !Split [ ',', { 'Fn::ImportValue': !Sub '${App}-${Env}-PrivateSubnets' } ]


  DBInstance:
    Type: "AWS::RDS::DBInstance"
    Properties:
      AllocatedStorage: "30"
      DBInstanceClass: db.t4g.medium
      DBName: "postgres"
      DBSubnetGroupName: !Ref DBSubnetGroup
      Engine: postgres
      EngineVersion: 14
      MasterUsername: !Sub "{{resolve:secretsmanager:${MyRDSInstanceSecret}::username}}"
      MasterUserPassword: !Sub "{{resolve:secretsmanager:${MyRDSInstanceSecret}::password}}"
      StorageType: gp2
      MonitoringInterval: 0
      VPCSecurityGroups:
        - !Ref DatabaseSecurityGroup

  MyRDSInstanceSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: "This is my rds instance secret"
      GenerateSecretString:
        SecretStringTemplate: '{"username": "postgresadmin"}'
        GenerateStringKey: "password"
        PasswordLength: 16
        ExcludeCharacters: '"@/\'
      Tags:
        - Key: copilot-environment
          Value: !Ref Env
        - Key: copilot-application
          Value: !Ref App
  DBInstanceSecretAtachement:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref MyRDSInstanceSecret
      TargetId: !Ref DBInstance
      TargetType: AWS::RDS::DBInstance

  DatabaseSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: The Security Group for the database instance.
      VpcId:
        Fn::ImportValue: !Sub "${App}-${Env}-VpcId"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId:
            Fn::ImportValue: !Sub "${App}-${Env}-EnvironmentSecurityGroup"
      Tags:
        - Key: copilot-environment
          Value: !Ref Env
        - Key: copilot-application
          Value: !Ref App

Outputs:
  RdsSecurityGroup:
    Description: "The security group to attach to the workload."
    Value: !Ref DatabaseSecurityGroup
  RdsSecret:
    Description: "The JSON secret that holds the database username and password. Fields are 'host', 'port', 'dbname', 'username', 'password', 'dbClusterIdentifier' and 'engine'"
    Value: !Ref MyRDSInstanceSecret
    Export:
      Name: !Sub '${App}-${Env}-RDS-RdsSecret'
